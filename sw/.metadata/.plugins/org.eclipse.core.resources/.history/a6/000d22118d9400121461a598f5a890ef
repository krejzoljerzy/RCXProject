package com.BGHK.RCX.CompileAndLink;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class CompileAndLink {
	
	 static String compileCommands="arm-none-eabi-gcc" +
			" -mcpu=cortex-m0 -mthumb -Wall -ffunction-sections -g -O0" +
			" -c" +
			" -ID:\\gitHub\\RCXProject\\fw\\legoRCX\\cmsis_core" +
			" -ID:\\gitHub\\RCXProject\\fw\\legoRCX\\cmsis_boot" +
			" -ID:\\gitHub\\RCXProject\\fw\\legoRCX\\stm_lib\\inc" +
			" -ID:\\gitHub\\RCXProject\\fw" +
			" -ID:\\gitHub\\RCXProject\\fw\\legoRCX" +
			" -ID:\\gitHub\\RCXProject\\fw\\legoRCX\\stm_lib";
	 
	 static String[] files = {
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\stm_lib\\src\\stm32f0xx_rcc.c"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCX\\obj\\stm32f0xx_rcc.o",
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\main.c"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCX\\obj\\main.o",
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\cmsis_boot\\startup\\startup_stm32f0xx.s"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCX\\obj\\startup_stm32f0xx.o",
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\stm_lib\\src\\stm32f0xx_gpio.c"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCX\\obj\\stm32f0xx_gpio.o",
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\stm_lib\\src\\stm32f0xx_usart.c"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCX\\obj\\stm32f0xx_usart.o",
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\cmsis_boot\\system_stm32f0xx.c"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCX\\obj\\system_stm32f0xx.o",
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\stm_lib\\src\\stm32f0xx_pwr.c"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCX\\obj\\stm32f0xx_pwr.o",
			" -c D:\\gitHub\\RCXProject\\fw\\legoRCX\\cmsis_core\\core_cm0.c"+
			" -o D:\\gitHub\\RCXProject\\fw\\legoRCXobj\\core_cm0.o"
		 
	 };

	public static void compileAndLink() {

		try {
			// Execute command
			Runtime.getRuntime().exec("cmd /c start compilerCommand.bat ");

		} catch (IOException e) {
		}

	}

	public static void createBatFile() throws IOException {

		// Create new bat file.
		File f;
		f = new File("compilerCommand.bat");
		if (!f.exists()) {
			f.delete();
		}
		f.createNewFile();

		try {
			// Write to file
			FileWriter fstream = new FileWriter("compilerCommand.bat");
			BufferedWriter out = new BufferedWriter(fstream);
			for(int i = 0; i< files.length;i++){
				String buffer=null;
				buffer=compileCommands;
				buffer.concat(files[i]);
				out.write(buffer);
			}
			// Close the output stream
			out.close();
		} catch (Exception e) {// Catch exception if any
			System.err.println("Error: " + e.getMessage());
		}

	}

	public static void main(String[] args) throws IOException {

		createBatFile();
		compileAndLink();

	}

}
