/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.BGHK.legoGui;

import com.BGHK.elements.Block;
import com.BGHK.elements.Types;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;


public class CodeGenerator {
    private ArrayList<Block> rootList;
    
    String preamble = "#include \"modules.h\"\r\n"
            +"\r\n"
            +"/** This userMain_Number functions are generated by Java code Generator for Lego RCX Group Project.**/\r\n"
            + "uint32_t blockId;\r\n"
            + "uint8_t state = idle;\r\n"
            + "userMain(){\r\n"
            + "    switch (blockId){\r\n";
    String endingFile =
              "        default:\r\n"
            + "            break;\r\n"
            + "    }\r\n"
            + "}\r\n";

    
    public CodeGenerator(ArrayList roots){
        rootList = roots;
    }
    
    public void createCode(){
    File code = new File("\\userMain.c");
    System.out.println(code.getAbsolutePath());
        try {
            FileOutputStream fos = new FileOutputStream(code);
            fos.write(preamble.getBytes());
            
            // Iterate over whole main root.
            Block current = rootList.get(0);
            while (current != null){
            // Get it's id.
                Block b = current;
                int id = b.getId();
                String fullCase = "        case "+id+":\r\n";
                fullCase +=       "            if (state == idle){\r\n";
                fullCase +=       "                // Do stuff.\r\n";
                if (b.type==Types.immediate){
                fullCase += b.getFunction(4);
                } else if (b.type==Types.timerRelevant){
                fullCase +=       "                state = busy;\r\n";
                fullCase += b.getFunction(4);
                fullCase +=       "                startTimer();\r\n";
                
                }
                fullCase +=       "            }\r\n";
                fullCase +=       "            break;\r\n";
                
                fos.write(fullCase.getBytes());
                current = current.childBlock;
            }
            fos.write(endingFile.getBytes());
            fos.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CodeGenerator.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CodeGenerator.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
}
